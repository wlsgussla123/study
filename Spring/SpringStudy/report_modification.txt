앞서, DI를 이용하여 UserDao가 ConnectionMaker를 사용할 수 있도록 주입하였다. 
스프링의 Application Context를 이용한 방식과 DaoFactory 내에서 자체적으로 주입시키는 방법도 해봤다.

DI의 장점은 
1. 코드에 런타임 클래스에 대한 의존관계가 나타나지 않고, 
2. 인터페이스를 통해 결합도가 낮은 코드를 만든다.

이 덕분에 다른 책임을 가진 사용 의존관계에 있는 대상이 변경되어도 영향을 받지 않고,
확장을 할 때도 용이하게 할 수 있다는 장점이 있다.

지금까지의 예제를 보면, UserDao가 ConnectionMaker 인터페이스에만 의존하고 있는데,
** 이 뜻은 ConnectionMaker를 구현하기만 하고 있다면 어떤 object라도 사용할 수 있다는 뜻이다.


**** Counting 예제 분석
1. dao 설정

2. UserDao에 DConnectionMaker가 주입된 CountingConnectionMaker가 생성.

3. UserDao에 CountingConnectionMaker 주입