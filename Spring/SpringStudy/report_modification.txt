앞서, DAO 코드를 리팩토링 하면서 관심사를 분리를 하여 확장과 변경이 용이한 코드를 작성하였다.
그 과정에서 중복 코드를 메서드로 추출하고, 확장이 가능하도록 추상 메서드로 선언도 해보았으며, coupling을 낮추기 위하여 중간에 인터페이스도 넣어보았다.
인터페이스로 분리하는 과정에서도 UserDao에는 어떠한 구현 클래스를 사용할 것인가에 대한 코드가 나오게 되었고 결국 이것을 해결하기 위하여 클라이언트에 그 작업을 넘겨주게 되었다.
즉, 클라이언트가 자신이 사용할 구현 클래스를 넘기는 것까지가 현 상태이다. 

문제는 지금 클라이언트는 main인데, main은 단순히 UserDao의 기능을 작동시키는 것에 대한 테스트이다. 그러니 다른 책임을 또 다시 분리할 필요가 있다.

factory : 오브젝트를 생성하는 쪽과 생성된 오브젝트를 사용하는 쪽의 역할과 책임을 깔끔하게 분리하려는 목적으로 사용.

DaoFactory에서 DBConnection과 UserDao의 연결을 시켜주고, 이것을 main으로 반환한다.
즉, UserDao에서 어떠한 ConnectionMaker를 사용할지에 대한 코든느 DaoFactory에 넘기게 된 것이다.